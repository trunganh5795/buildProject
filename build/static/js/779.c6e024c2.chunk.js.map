{"version":3,"file":"static/js/779.c6e024c2.chunk.js","mappings":"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","sources":["apis/accountApi.js","components/Custom/Field/InputField.js","components/Delay/index.js","containers/Login/ForgotPassword/index.js","../node_modules/@ant-design/icons-svg/es/asn/EyeTwoTone.js","../node_modules/@ant-design/icons/es/icons/EyeTwoTone.js"],"sourcesContent":["import axiosClient from './axiosClient';\n\nconst ACCOUNT_API_ENDPOINT = '/accounts';\n\nconst accountApi = {\n  // fn: gửi mã xác nhận\n  postSendVerifyCode: (email) => {\n    const url = ACCOUNT_API_ENDPOINT + '/verify';\n    return axiosClient.post(url, email);\n  },\n\n  // fn: đăng ký\n  postSignUp: (account) => {\n    const url = ACCOUNT_API_ENDPOINT + '/signup';\n    return axiosClient.post(url, account);\n  },\n\n  // fn: gửi mã xác nhận lấy lại mật khẩu\n  postSendCodeForgotPW: (email) => {\n    const url = ACCOUNT_API_ENDPOINT + '/verify/forgot';\n    return axiosClient.post(url, email);\n  },\n\n  // fn: reset password\n  postResetPassword: (account) => {\n    const url = ACCOUNT_API_ENDPOINT + '/reset-pw';\n    return axiosClient.post(url, account);\n  },\n};\n\nexport default accountApi;\n","import { Input } from 'antd';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nInputField.defaultProps = {\n  type: 'text',\n  placeholder: '',\n  size: 'large',\n  suffix: null,\n  autocomplete: 'on',\n  autofocus: false,\n  maxLength: 1000,\n};\n\nfunction InputField(props) {\n  const {\n    field,\n    form,\n    type,\n    placeholder,\n    size,\n    suffix,\n    className,\n    autocomplete,\n    autofocus,\n    ref,\n    maxLength,\n    ...rest\n  } = props;\n  const { name } = field;\n  const { errors, touched } = form;\n  const showError = errors[name] && touched[name];\n  //Input or Input.Password\n  const InputOption = type === 'password' ? Input.Password : Input;\n  return (\n    <>\n      <InputOption\n        ref={ref}\n        className={showError ? className + ' error-input' : className}\n        name={name}\n        {...field}\n        {...rest}\n        placeholder={placeholder}\n        size={size}\n        suffix={suffix}\n        autoComplete={autocomplete}\n        maxLength={maxLength}\n        autoFocus={autofocus}\n      />\n      {showError && <div className=\"show-error-input\">{errors[name]}</div>}\n    </>\n  );\n}\n\nInputField.propTypes = {\n  field: PropTypes.object.isRequired,\n  form: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  type: PropTypes.string,\n  placeholder: PropTypes.string,\n  size: PropTypes.string,\n  suffix: PropTypes.object,\n  autocomplete: PropTypes.string,\n  autofocus: PropTypes.bool,\n  ref: PropTypes.any,\n  maxLength: PropTypes.number,\n};\n\nexport default InputField;\n","import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\n\nDelay.propTypes = {\n  wait: PropTypes.number,\n};\n\nfunction Delay(props) {\n  const { wait } = props;\n  const [waiting, setWaiting] = useState(true);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setWaiting(false);\n    }, wait);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, []);\n\n  return waiting === true ? null : props.children;\n}\n\nexport default Delay;\n","//=== Sign Up Page\nimport {\n  EyeInvisibleOutlined,\n  EyeTwoTone,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\nimport { Button, Col, message, Row, Tooltip } from 'antd';\nimport InputField from '../../../components/Custom/Field/InputField';\nimport Delay from '../../../components/Delay';\nimport constants from '../../../constants/index';\nimport { FastField, Form, Formik } from 'formik';\nimport React, { useRef, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport accountApi from '../../../apis/accountApi';\nimport * as Yup from 'yup';\nimport './index.scss';\n\nfunction ForgotPassword() {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [isSending, setIsSending] = useState(false);\n  const emailRef = useRef('');\n  // fn: gửi mã xác nhận\n  const onSendCode = async () => {\n    try {\n      // kiểm tra email\n      const email = emailRef.current;\n      const regex = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n\n      if (!regex.test(email)) {\n        message.error('Email không hợp lệ !');\n        return;\n      }\n      // set loading, tránh việc gửi liên tục\n      setIsSending(true);\n\n      // tiến hành gửi mã\n      const result = await accountApi.postSendCodeForgotPW({ email });\n      if (result.status === 200) {\n        message.success('Gửi thành công, kiểm tra email');\n        setIsSending(false);\n      }\n    } catch (error) {\n      setIsSending(false);\n      if (error.response) {\n        message.error(error.response.data.message);\n      } else {\n        message.error('Gửi thất bại, thử lại');\n      }\n    }\n  };\n\n  // fn: thay đổi mật khẩu\n  const onChangePassword = async (account) => {\n    try {\n      setIsSubmitting(true);\n      const result = await accountApi.postResetPassword({ account });\n      if (result.status === 200) {\n        setIsSubmitting(false);\n        setIsSuccess(true);\n        message.success('Thay đổi mật khẩu thành công.');\n      }\n    } catch (error) {\n      setIsSubmitting(false);\n      if (error.response) {\n        message.error(error.response.data.message);\n      } else {\n        message.error('Cập nhật thất bại. Thử lại');\n      }\n    }\n  };\n\n  // giá trị khởi tạo cho formik\n  const initialValue = {\n    email: '',\n    password: '',\n    verifyCode: '',\n  };\n\n  // validate form trước submit với yup\n  const validationSchema = Yup.object().shape({\n    email: Yup.string()\n      .trim()\n      .required('* Please enter your email.')\n      .email('* Invalid Email !'),\n    password: Yup.string()\n      .trim()\n      .required('* Please enter your new password.'),\n    verifyCode: Yup.string()\n      .trim()\n      .required('* Please enter your verification code')\n      .length(\n        constants.MAX_VERIFY_CODE,\n        `* Mã xác nhận có ${constants.MAX_VERIFY_CODE} ký tự`,\n      ),\n  });\n\n  //return...\n  return (\n    <div className=\"ForgotPW container\">\n      {/* chuyển về home khi đã login */}\n      {isSuccess && (\n        <Delay wait={constants.DELAY_TIME}>\n          <Redirect to={constants.ROUTES.LOGIN} />\n        </Delay>\n      )}\n\n      <h1 className=\"Login-title m-b-20 m-t-20 underline-title\">\n        {/* <b>Thay đổi mật khẩu</b> */}\n        <b>Reset password</b>\n      </h1>\n      <Formik\n        initialValues={initialValue}\n        validationSchema={validationSchema}\n        onSubmit={onChangePassword}>\n        {(formikProps) => {\n          emailRef.current = formikProps.values.email;\n          const suffixColor = 'rgba(0, 0, 0, 0.25)';\n          return (\n            <Form className=\"bg-form\">\n              <Row\n                className=\"input-border p-l-20 p-r-20\"\n                gutter={[0, 24]}\n                justify=\"center\"\n                style={{ margin: 0 }}>\n                {/* Form thông tin đăng nhập */}\n                <Col span={24} className=\"m-t-20\">\n                  <FastField\n                    name=\"email\"\n                    component={InputField}\n                    className=\"input-form-common\"\n                    placeholder=\"Email *\"\n                    size=\"large\"\n                    suffix={\n                      <Tooltip title=\"Your email\">\n                        <InfoCircleOutlined\n                          style={{\n                            color: suffixColor,\n                          }}\n                        />\n                      </Tooltip>\n                    }\n                  />\n                </Col>\n                <Col span={24}>\n                  <FastField\n                    name=\"password\"\n                    component={InputField}\n                    className=\"input-form-common\"\n                    type=\"password\"\n                    placeholder=\"New password *\"\n                    size=\"large\"\n                    autocomplete=\"on\"\n                    iconRender={(visible) =>\n                      visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />\n                    }\n                  />\n                </Col>\n                <Col span={14}>\n                  {/* user name field */}\n                  <FastField\n                    name=\"verifyCode\"\n                    component={InputField}\n                    className=\"input-form-common\"\n                    placeholder=\"Verification code *\"\n                    size=\"large\"\n                    suffix={\n                      <Tooltip title=\"Click gửi mã để nhận mã qua email\">\n                        <InfoCircleOutlined style={{ color: suffixColor }} />\n                      </Tooltip>\n                    }\n                  />\n                </Col>\n                <Col span={10}>\n                  <Button\n                    className=\"w-100 verify-btn\"\n                    type=\"primary\"\n                    size=\"large\"\n                    onClick={onSendCode}\n                    loading={isSending}>\n                    Send code\n                  </Button>\n                </Col>\n\n                {/* Button submit */}\n                <Col className=\"p-t-8 m-b-20 t-center\" span={24}>\n                  <Button\n                    className=\"ForgotPW-submit-btn w-100\"\n                    size=\"large\"\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    loading={isSubmitting}>\n                    Change password\n                  </Button>\n                  <div className=\"m-t-10\">\n                    {/* Quay lại &nbsp; */}\n                    <Link to={constants.ROUTES.LOGIN}>Log in</Link>\n                    &nbsp; Or &nbsp;\n                    <Link to={constants.ROUTES.SIGNUP}>Register</Link>\n                  </div>\n                </Col>\n              </Row>\n            </Form>\n          );\n        }}\n      </Formik>\n    </div>\n  );\n}\n\nexport default ForgotPassword;\n","// This icon file is generated automatically.\nvar EyeTwoTone = { \"icon\": function render(primaryColor, secondaryColor) { return { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M81.8 537.8a60.3 60.3 0 010-51.5C176.6 286.5 319.8 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 000 51.5C176.6 737.5 319.9 838 512 838c-192.1 0-335.4-100.5-430.2-300.2z\", \"fill\": secondaryColor } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 258c-161.3 0-279.4 81.8-362.7 254C232.6 684.2 350.7 766 512 766c161.4 0 279.5-81.8 362.7-254C791.4 339.8 673.3 258 512 258zm-4 430c-97.2 0-176-78.8-176-176s78.8-176 176-176 176 78.8 176 176-78.8 176-176 176z\", \"fill\": secondaryColor } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M942.2 486.2C847.4 286.5 704.1 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 000 51.5C176.6 737.5 319.9 838 512 838c192.2 0 335.4-100.5 430.2-300.3 7.7-16.2 7.7-35 0-51.5zM512 766c-161.3 0-279.4-81.8-362.7-254C232.6 339.8 350.7 258 512 258s279.4 81.8 362.7 254C791.5 684.2 673.4 766 512 766z\", \"fill\": primaryColor } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M508 336c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm0 288c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z\", \"fill\": primaryColor } }] }; }, \"name\": \"eye\", \"theme\": \"twotone\" };\nexport default EyeTwoTone;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport EyeTwoToneSvg from \"@ant-design/icons-svg/es/asn/EyeTwoTone\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar EyeTwoTone = function EyeTwoTone(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: EyeTwoToneSvg\n  }));\n};\n\nEyeTwoTone.displayName = 'EyeTwoTone';\nexport default /*#__PURE__*/React.forwardRef(EyeTwoTone);"],"names":["accountApi","postSendVerifyCode","email","axiosClient","ACCOUNT_API_ENDPOINT","postSignUp","account","postSendCodeForgotPW","postResetPassword","InputField","props","field","form","type","placeholder","size","suffix","className","autocomplete","autofocus","ref","maxLength","rest","name","errors","touched","showError","InputOption","Input","autoComplete","autoFocus","defaultProps","Delay","wait","useState","waiting","setWaiting","useEffect","timer","setTimeout","clearTimeout","children","propTypes","PropTypes","isSubmitting","setIsSubmitting","isSuccess","setIsSuccess","isSending","setIsSending","emailRef","useRef","onSendCode","current","test","message","status","response","data","onChangePassword","validationSchema","Yup","shape","trim","required","password","verifyCode","length","constants","Redirect","to","initialValues","onSubmit","formikProps","values","suffixColor","gutter","justify","style","margin","span","component","title","InfoCircleOutlined","color","iconRender","visible","EyeTwoTone","EyeInvisibleOutlined","onClick","loading","htmlType","primaryColor","secondaryColor","React","AntdIcon","_objectSpread","icon","EyeTwoToneSvg","displayName"],"sourceRoot":""}