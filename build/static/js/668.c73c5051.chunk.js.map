{"version":3,"file":"static/js/668.c73c5051.chunk.js","mappings":"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","sources":["containers/AdminPage/CustomersList/index.js","../node_modules/antd/es/popconfirm/index.js"],"sourcesContent":["import { Button, message, Popconfirm, Spin, Table } from 'antd';\nimport adminApi from '../../../apis/adminApi';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport AdminSearch from '../../../components/AdminSearch';\nimport moment from 'moment';\nlet isSearch = true;\nfunction CustomerList() {\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [page, setPage] = useState(1)\n  const [searchOption, setSearchOption] = useState(null)\n  const [searchValue, setSearchValue] = useState('')\n  const [totalPage, setTotalPage] = useState(0)\n  // event: xoá tài khoản\n  const onDelCustomer = async (id) => {\n    try {\n      const response = await adminApi.delCustomer(id);\n      if (response && response.status === 200) {\n        message.success('Xoá tài khoản thành công');\n        setData(data.filter((item) => item.id !== id));\n      }\n    } catch (error) {\n      message.error('Xoá tài khoản thất bại');\n    }\n  };\n  const onSearch = useCallback(\n    async (page, option, value, search = false) => {\n      isSearch = search; // phân biệt đang tiềm kiếm hay đang phân trang , nếu true là tìm kiếm false là phân trang\n      try {\n        let result = await adminApi.getCustomerListBy(page, option, value);\n        console.log(result.data.rows)\n        let newList = result.data.rows.map((item, index) => {\n          return {\n            key: index,\n            id: item.id,\n            email: item.email,\n            birthday: item.dateOfBirth,\n            fullName: item.name,\n            address: item.address,\n            gender: item.gender,\n            role: item.role,\n            active: item.active\n          }\n        })\n        setTotalPage(result.data.count)\n        setData(newList);\n        setSearchOption(option);\n        setSearchValue(value);\n        setIsLoading(false);\n        console.log(\"Hererererererere\");\n        if (isSearch) setPage(page)\n      } catch (error) {\n        message.error(error.response.data)\n      }\n    },\n    [],\n  )\n\n  const columns = [\n    {\n      title: 'ID',\n      key: 'id',\n      dataIndex: 'id',\n      render: (v) => <a>{v}</a>,\n    },\n    {\n      title: 'Email',\n      key: 'email',\n      dataIndex: 'email',\n    },\n    {\n      title: 'Full Name',\n      key: 'fullName',\n      dataIndex: 'fullName',\n    },\n    {\n      title: 'Role',\n      key: 'role',\n      dataIndex: 'role',\n      // defaultFilteredValue:['client','admin'],\n      filters: [{ text: 'Client', value: 'client' }, { text: \"Admin\", value: 'admin' }]\n    },\n    {\n      title: 'Trạng thái',\n      key: 'active',\n      dataIndex: 'active',\n    },\n    {\n      title: 'Địa chỉ',\n      key: 'address',\n      dataIndex: 'address',\n    },\n    {\n      title: 'Date Of Birth',\n      key: 'birthday',\n      dataIndex: 'birthday',\n      render: (dateOfBirth) => moment(dateOfBirth).format('DD-MM-YYYY')\n    },\n    {\n      title: 'Gender',\n      key: 'gender',\n      dataIndex: 'gender',\n      render: (gender) => (gender ? 'Nam' : 'Nữ'),\n    },\n    {\n      title: 'Hành động',\n      render: (_v, records) => (\n        <Popconfirm\n          title=\"Bạn có chắc muốn xoá ?\"\n          placement=\"left\"\n          cancelText=\"Huỷ bỏ\"\n          okText=\"Xoá\"\n          onConfirm={() => onDelCustomer(records.id)}>\n          <Button danger>Khóa</Button>\n        </Popconfirm>\n      ),\n    },\n  ];\n\n  useEffect(() => {\n    let isSubscribe = true;\n    async function getCustomerList() {\n      if (!isSearch) {\n        try {\n          setIsLoading(true);\n          onSearch(page, searchOption, searchValue)\n        } catch (error) {\n          if (isSubscribe) setIsLoading(false);\n        }\n      }\n    }\n    getCustomerList();\n    return () => {\n      isSubscribe = false;\n      isSearch = true\n    };\n  }, [page]);\n  return (\n    <>\n      {/* {isLoading ? (\n        <Spin className=\"trans-center\" tip=\"Đang lấy danh sách ...\" />\n      ) : ( */}\n      <div className='m-lr-10 m-t-10'>\n        <AdminSearch\n          options={[{ id: 0, text: \"Tất Cả\" }, { id: 1, text: \"Tên\" }, { id: 2, text: ' Số điện thoại' }, { id: 3, text: 'Mã KH' }, { id: 4, text: 'Email' }]}\n          onSearch={onSearch}\n          setPage={setPage}\n          setSearchOption={setSearchOption}\n        />\n        <Table\n          columns={columns}\n          dataSource={data}\n          pagination={{\n            showLessItems: true,\n            position: ['bottomCenter'],\n            current: page,\n            pageSize: 10,\n            total: totalPage,\n            onChange: (p) => {\n              isSearch = false;\n              setPage(p)\n            },\n          }}\n          loading={isLoading}\n        />\n        {/* pagination={{\n            current: page,\n            pageSize: 10,\n            total: totalProduct,\n            position: ['bottomCenter'],\n            showSizeChanger: false,\n            onChange: (p) => setPage(p)\n          }} */}\n      </div>\n      {/* )} */}\n    </>\n  );\n}\n\nexport default CustomerList;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this;\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport ExclamationCircleFilled from \"@ant-design/icons/es/icons/ExclamationCircleFilled\";\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport * as React from 'react';\nimport Button from '../button';\nimport { convertLegacyProps } from '../button/button';\nimport { ConfigContext } from '../config-provider';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale/default';\nimport Popover from '../popover';\nimport ActionButton from '../_util/ActionButton';\nimport { getRenderPropValue } from '../_util/getRenderPropValue';\nimport { cloneElement } from '../_util/reactNode';\nvar Popconfirm = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls;\n\n  var _useMergedState = useMergedState(false, {\n    value: props.visible,\n    defaultValue: props.defaultVisible\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      visible = _useMergedState2[0],\n      setVisible = _useMergedState2[1]; // const isDestroyed = useDestroyed();\n\n\n  var settingVisible = function settingVisible(value, e) {\n    var _a;\n\n    setVisible(value, true);\n    (_a = props.onVisibleChange) === null || _a === void 0 ? void 0 : _a.call(props, value, e);\n  };\n\n  var close = function close(e) {\n    settingVisible(false, e);\n  };\n\n  var onConfirm = function onConfirm(e) {\n    var _a;\n\n    return (_a = props.onConfirm) === null || _a === void 0 ? void 0 : _a.call(_this, e);\n  };\n\n  var onCancel = function onCancel(e) {\n    var _a;\n\n    settingVisible(false, e);\n    (_a = props.onCancel) === null || _a === void 0 ? void 0 : _a.call(_this, e);\n  };\n\n  var _onKeyDown = function onKeyDown(e) {\n    if (e.keyCode === KeyCode.ESC && visible) {\n      settingVisible(false, e);\n    }\n  };\n\n  var onVisibleChange = function onVisibleChange(value) {\n    var disabled = props.disabled;\n\n    if (disabled) {\n      return;\n    }\n\n    settingVisible(value);\n  };\n\n  var renderOverlay = function renderOverlay(prefixCls, popconfirmLocale) {\n    var okButtonProps = props.okButtonProps,\n        cancelButtonProps = props.cancelButtonProps,\n        title = props.title,\n        cancelText = props.cancelText,\n        okText = props.okText,\n        okType = props.okType,\n        icon = props.icon,\n        _props$showCancel = props.showCancel,\n        showCancel = _props$showCancel === void 0 ? true : _props$showCancel;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-inner-content\")\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-message\")\n    }, icon, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-message-title\")\n    }, getRenderPropValue(title))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-buttons\")\n    }, showCancel && /*#__PURE__*/React.createElement(Button, _extends({\n      onClick: onCancel,\n      size: \"small\"\n    }, cancelButtonProps), cancelText || popconfirmLocale.cancelText), /*#__PURE__*/React.createElement(ActionButton, {\n      buttonProps: _extends(_extends({\n        size: 'small'\n      }, convertLegacyProps(okType)), okButtonProps),\n      actionFn: onConfirm,\n      close: close,\n      prefixCls: getPrefixCls('btn'),\n      quitOnNullishReturnValue: true,\n      emitEvent: true\n    }, okText || popconfirmLocale.okText)));\n  };\n\n  var customizePrefixCls = props.prefixCls,\n      placement = props.placement,\n      children = props.children,\n      overlayClassName = props.overlayClassName,\n      restProps = __rest(props, [\"prefixCls\", \"placement\", \"children\", \"overlayClassName\"]);\n\n  var prefixCls = getPrefixCls('popover', customizePrefixCls);\n  var prefixClsConfirm = getPrefixCls('popconfirm', customizePrefixCls);\n  var overlayClassNames = classNames(prefixClsConfirm, overlayClassName);\n  var overlay = /*#__PURE__*/React.createElement(LocaleReceiver, {\n    componentName: \"Popconfirm\",\n    defaultLocale: defaultLocale.Popconfirm\n  }, function (popconfirmLocale) {\n    return renderOverlay(prefixCls, popconfirmLocale);\n  });\n  return /*#__PURE__*/React.createElement(Popover, _extends({}, restProps, {\n    prefixCls: prefixCls,\n    placement: placement,\n    onVisibleChange: onVisibleChange,\n    visible: visible,\n    _overlay: overlay,\n    overlayClassName: overlayClassNames,\n    ref: ref\n  }), cloneElement(children, {\n    onKeyDown: function onKeyDown(e) {\n      var _a, _b;\n\n      if ( /*#__PURE__*/React.isValidElement(children)) {\n        (_b = children === null || children === void 0 ? void 0 : (_a = children.props).onKeyDown) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n      }\n\n      _onKeyDown(e);\n    }\n  }));\n});\nPopconfirm.defaultProps = {\n  placement: 'top',\n  trigger: 'click',\n  okType: 'primary',\n  icon: /*#__PURE__*/React.createElement(ExclamationCircleFilled, null),\n  disabled: false\n};\nexport default Popconfirm;"],"names":["isSearch","useState","data","setData","isLoading","setIsLoading","page","setPage","searchOption","setSearchOption","searchValue","setSearchValue","totalPage","setTotalPage","onDelCustomer","id","adminApi","response","status","message","filter","item","onSearch","useCallback","option","value","search","result","console","log","rows","newList","map","index","key","email","birthday","dateOfBirth","fullName","name","address","gender","role","active","count","columns","title","dataIndex","render","v","filters","text","moment","format","_v","records","placement","cancelText","okText","onConfirm","danger","useEffect","isSubscribe","error","getCustomerList","className","options","dataSource","pagination","showLessItems","position","current","pageSize","total","onChange","p","loading","_this","__rest","s","e","t","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","Popconfirm","React","props","ref","getPrefixCls","ConfigContext","_useMergedState","useMergedState","visible","defaultValue","defaultVisible","_useMergedState2","_slicedToArray","setVisible","settingVisible","_a","onVisibleChange","close","onCancel","customizePrefixCls","prefixCls","children","overlayClassName","restProps","prefixClsConfirm","overlayClassNames","classNames","overlay","LocaleReceiver","componentName","defaultLocale","popconfirmLocale","okButtonProps","cancelButtonProps","okType","icon","_props$showCancel","showCancel","concat","getRenderPropValue","Button","_extends","onClick","size","ActionButton","buttonProps","convertLegacyProps","actionFn","quitOnNullishReturnValue","emitEvent","renderOverlay","Popover","disabled","_overlay","cloneElement","onKeyDown","_b","keyCode","KeyCode","_onKeyDown","defaultProps","trigger","ExclamationCircleFilled"],"sourceRoot":""}