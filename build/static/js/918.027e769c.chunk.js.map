{"version":3,"file":"static/js/918.027e769c.chunk.js","mappings":"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","sources":["containers/AdminPage/Dashboard/AnnualRevenue/index.js","containers/AdminPage/Dashboard/TopOrders/index.js","components/BarChart/BarChart.js","containers/AdminPage/Dashboard/LatestOrder/LatestOrder.js","containers/AdminPage/Dashboard/index.js"],"sourcesContent":["import { BarChartOutlined } from '@ant-design/icons';\nimport { Spin } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport statisticApi from '../../../../apis/statisticApi';\nimport helpers from '../../../../helpers';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  BarElement,\n  ArcElement\n} from 'chart.js';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  ArcElement,\n  ChartDataLabels,\n  Title,\n  Tooltip,\n  Legend,\n  PointElement,\n  LineElement,\n);\n//Chỉ cần register 1 lần trong bất kỳ component nào trong 1 page\n// tạo danh sách năm\nfunction generateLabels(\n  startYear = new Date().getFullYear(),\n  endYear = new Date().getFullYear(),\n) {\n  let result = [];\n  for (let i = startYear; i <= endYear; ++i) {\n    result.push(`${i}`);\n  }\n  return result;\n}\n\nfunction AnnualRevenue() {\n  const startYear = 2010;\n  const endYear = new Date().getFullYear();\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // event: thống kê\n  useEffect(() => {\n    let isSubscribe = true;\n    async function getStaAnnualRevenue() {\n      try {\n        const response = await statisticApi.getStaAnnualRevenue(\n          startYear,\n          endYear,\n        );\n        if (isSubscribe && response) {\n          const { data } = response.data;\n          setData(data);\n          setIsLoading(false);\n        }\n      } catch (error) {\n        if (isSubscribe) setIsLoading(false);\n      }\n    }\n    getStaAnnualRevenue();\n    return () => {\n      isSubscribe = false;\n    };\n  }, []);\n\n  return (\n    <>\n      {isLoading ? (\n        <Spin\n          tip=\"Đang thống kê ...\"\n          size=\"large\"\n          indicator={<BarChartOutlined spin />}\n        />\n      ) : (\n        <Bar\n          data={{\n            labels: generateLabels(2010, endYear),\n            datasets: [\n              {\n                backgroundColor: '#2EA62A',\n                data: [...data],\n              },\n            ],\n          }}\n          options={{\n            legend: { display: false },\n            title: {\n              display: true,\n              text: `Doanh thu theo từng năm từ năm ${startYear} đến ${endYear}`,\n              fontSize: 18,\n            },\n            scales: {\n              y: {\n                  ticks: {\n                    callback: function (value, index, values) {\n                      return value >= 1000000000\n                        ? `${(value / 1000000000).toFixed(1)} tỷ`\n                        : value >= 1000000\n                          ? `${(value / 1000000).toFixed(1)} tr`\n                          : helpers.formatProductPrice(value);\n                    },\n                  },\n                },\n              \n            },\n          }}\n        />\n      )}\n    </>\n  );\n}\n\nexport default AnnualRevenue;\n","import { PieChartOutlined } from '@ant-design/icons';\nimport { Spin } from 'antd';\nimport statisticApi from '../../../../apis/statisticApi';\nimport React, { useEffect, useState } from 'react';\nimport { Doughnut } from 'react-chartjs-2';\n\nfunction TopOrders() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [list, setList] = useState({ province: [], count: [] });\n\n  // event: thống kê\n  useEffect(() => {\n    let isSubscribe = true;\n    async function getTopProvinceOrder() {\n      try {\n        const response = await statisticApi.getTopProvinceOrder();\n        if (isSubscribe && response) {\n          const { data } = response.data;\n          setList({\n            province: [...data.map((item) => item.province)],\n            count: [...data.map((item) => item.count)],\n          });\n          setIsLoading(false);\n        }\n      } catch (error) {\n        if (isSubscribe) setIsLoading(false);\n      }\n    }\n    getTopProvinceOrder();\n    return () => {\n      isSubscribe = false;\n    };\n  }, []);\n\n  return (\n    <>\n      {isLoading ? (\n        <Spin\n          tip=\"Đang thống kê ...\"\n          size=\"large\"\n          indicator={<PieChartOutlined spin />}\n        />\n      ) : (\n        <Doughnut\n          data={{\n            labels: [...list.province],\n            datasets: [\n              {\n                backgroundColor: [\n                  '#3e95cd',\n                  '#8e5ea2',\n                  '#3cba9f',\n                  '#e8c3b9',\n                  '#c45850',\n                ],\n                data: [...list.count],\n              },\n            ],\n          }}\n          options={{\n            legend: { display: true },\n            title: {\n              display: true,\n              text: `Các tỉnh có đơn hàng nhiều nhất`,\n              fontSize: 18,\n            },\n          }}\n        />\n      )}\n    </>\n  );\n}\n\nexport default TopOrders;\n","import React from 'react'\r\nimport { Bar } from 'react-chartjs-2'\r\n// const labels = ['01/01/2022',12121, '01/02/2022', '01/03/2022', '20/04/2022', '01/05/2022', '01/06/2022', '01/07/2022'];\r\nconst labels = [100, 200, 300, 400, 500, 600];\r\nconst data = {\r\n    // labels,\r\n    datasets: [\r\n        {\r\n            label: 'Sales',\r\n            data: [{ x: 50, y: 100 }, { x: 150, y: 200 }, { x: 250, y: 200 }, { x: 350, y: 1200 }, { x: 450, y: 800 }, { x: 550, y: 700 }],\r\n            // borderColor: 'rgb(255, 99, 132)',\r\n            type: 'bar',\r\n            borderColor: 'rgb(255, 100, 0)',\r\n            backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n            // pointRadius: 6,\r\n            borderWidth: 0.5,\r\n            barPercentage: 1.25,\r\n        },\r\n        // {\r\n        //     label: 'Total',\r\n        //     type: 'line',\r\n        //     data: [100, 147, 90, 123, 87, 200, 185],\r\n        //     borderColor: 'rgb(53, 162, 235)',\r\n        //     backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n        //     // pointStyle: 'rectRounded', reference : https://www.chartjs.org/docs/latest/api/#pointstyle\r\n        //     pointRadius: 6,\r\n        //     pointBorderColor: 'rgb(33, 5, 245,0.7)',\r\n        //     pointBackgroundColor: 'rgb(0, 102, 255)',\r\n        //     yAxisID: 'y1',\r\n\r\n        // },\r\n    ],\r\n};\r\nconst options = {\r\n    responsive: true,\r\n    interaction: {\r\n        mode: 'index',\r\n        intersect: true,\r\n    },\r\n    // stacked: false,\r\n    plugins: {\r\n        legend: {\r\n            position: 'top',\r\n            display: true\r\n        },\r\n        title: {\r\n            display: true,\r\n            text: 'Number of Order',\r\n            font: {\r\n                size: '20px'\r\n            }\r\n        },\r\n        datalabels: {\r\n            display: false, //default: true\r\n            anchor: 'end',\r\n            align: 'end',\r\n            formatter: Math.round,\r\n            font: {\r\n                weight: 'bold',\r\n                size: '18px'\r\n            },\r\n        },\r\n        tooltip: {\r\n            callbacks: {\r\n                label: (ctx) => {\r\n                    return \"Số đơn :\" + ctx.label\r\n                },\r\n                title: (tooltipItem) => {\r\n                    return tooltipItem[0] ?  `Giá trị: ${+tooltipItem[0].label - 50} - ${+tooltipItem[0].label + 50}` : \"Undefined\"\r\n                }\r\n            }\r\n\r\n        }\r\n    },\r\n    scales: {\r\n        y: {\r\n            title: {\r\n                display: true,\r\n                text: 'Số đơn hàng',\r\n                color: '#000',\r\n                font: {\r\n                    // family: 'Comic Sans MS',\r\n                    size: 20,\r\n                    // weight: 'bold',\r\n                    lineHeight: 1.2,\r\n                },\r\n                padding: { top: 20, left: 0, right: 0, bottom: 0 }\r\n            },\r\n            min: 0,\r\n            // max: 2200,\r\n            ticks: {\r\n                // forces step size to be 50 units\r\n                stepSize: 50\r\n            }\r\n            // position: 'right',\r\n        },\r\n        // y1: {\r\n        //     title: {\r\n        //         display: true,\r\n        //         text: 'Doanh thu ( VND )',\r\n        //         color: '#000',\r\n        //         font: {\r\n        //             // family: 'Comic Sans MS',\r\n        //             size: 20,\r\n        //             // weight: 'bold',\r\n        //             lineHeight: 1.2,\r\n        //         },\r\n        //         padding: { top: 20, left: 0, right: 0, bottom: 0 }\r\n        //     },\r\n        //     min: 0,\r\n        //     max: 300,\r\n        //     position: 'right',\r\n        //     grid: {\r\n        //         display: false\r\n        //     }\r\n        // }\r\n        // ,\r\n        x: {\r\n            title: {\r\n                display: true,\r\n                text: 'Giá trị x1000 (VND)',\r\n                color: '#000',\r\n                font: {\r\n                    // family: 'Comic Sans MS',\r\n                    size: 20,\r\n                    // weight: 'bold',\r\n                    lineHeight: 1.2,\r\n                },\r\n                padding: { top: 20, left: 0, right: 0, bottom: 0 }\r\n            },\r\n            // type: 'time',\r\n            // time: {\r\n            //     parser: 'DD/MM/YYYY',\r\n            //     unit: 'month',\r\n            //     displayFormats: {\r\n            //         month: 'MM / YY'\r\n            //     },\r\n            //     tooltipFormat: 'DD-MM-YYYY'\r\n            // }\r\n            // start\r\n            beginAtZero: true,\r\n            type: 'linear',\r\n            ticks: {\r\n                stepSize: 100\r\n            },\r\n            offset: false,\r\n            grid: {\r\n                offset: false\r\n            },\r\n        },\r\n    }\r\n\r\n};\r\nexport default function BarChart() {\r\n    return (\r\n        <div>\r\n            <Bar options={options} data={data} size=\"large\" />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Table } from 'antd';\r\nconst columns = [\r\n    {\r\n        title: 'ID',\r\n        dataIndex: 'id',\r\n        key: 'id',\r\n    },\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n    },\r\n    {\r\n        title: 'Thanh toán',\r\n        dataIndex: 'total',\r\n        key: 'total',\r\n    },\r\n];\r\nconst data = [\r\n    { id: 1, name: 'trung anh', total: 123 ,key:1},\r\n    { id: 1, name: 'trung anh', total: 123 ,key:2},\r\n    { id: 1, name: 'trung anh', total: 123 ,key:3}\r\n]\r\nexport default function LatestOrder() {\r\n    const [loading, setLoading] = useState(false)\r\n    return (\r\n        <div className=\"h-100%\">\r\n            <h1>Đơn hàng mới</h1>\r\n            <Table\r\n                columns={columns}\r\n                dataSource={data}\r\n                pagination={{\r\n                    // current:1,\r\n                    pageSize: 4,\r\n                }}\r\n                loading={loading}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import { Col, Row } from 'antd';\nimport React from 'react';\nimport AnnualRevenue from './AnnualRevenue';\nimport MonthlyRevenue from './MonthlyRevenue';\nimport TopOrders from './TopOrders';\nimport { Bar } from 'react-chartjs-2';\nimport './index.scss'\nimport { EyeOutlined, PercentageOutlined, ShoppingCartOutlined } from '@ant-design/icons';\nimport PieChart from '../../../components/PieChart';\nimport LineChart from '../../../components/LineChart/LineChart';\nimport BarChart from '../../../components/BarChart/BarChart';\nimport LatestOrder from './LatestOrder/LatestOrder';\n\n//fake option\nfunction Dashboard() {\n  return (\n    <Row className=\"p-32 dashboard\" gutter={[8, 16]}>\n      <Col span={24} xl={6}>\n        <div className=\"bg-white info p-lr-12 bor-rad-8 p-tb-30\">\n          <h2><EyeOutlined style={{ color: 'blue' }} /> Tổng lượt truy cập hôm nay</h2>\n          <h1>10000</h1>\n        </div>\n      </Col>\n      <Col span={24} xl={6}>\n        <div className=\"bg-white info p-lr-12 bor-rad-8 p-tb-30\">\n          <h1><ShoppingCartOutlined style={{ color: 'yellowgreen' }} /> Tổng đơn hàng hôm nay</h1>\n          <h2>100</h2>\n        </div>\n      </Col>\n      <Col span={24} xl={6}>\n        <div className=\"bg-white info p-lr-12 bor-rad-8 p-tb-30\">\n          <h1><PercentageOutlined style={{ color: \"orange\" }} /> Tỷ lệ chuyển đổi đơn hàng</h1>\n          <h2>12.5 %</h2>\n        </div>\n      </Col>\n      <Col span={24} xl={6}>\n        <div className=\"bg-white info p-lr-12 bor-rad-8 p-tb-30\">\n          <h1>Doanh số hôm nay</h1>\n          <h2>{(3000000).toLocaleString('en-US')} VND</h2>\n        </div>\n      </Col>\n      {/* doanh thu theo tháng */}\n      <Col span={24} xl={6}>\n        <div className=\"bg-white p-12 bor-rad-8 box-sha-home h-100\">\n          <h1>Tỷ lệ đánh giá</h1>\n          <PieChart label={[\"1 Star 12 12 1\", \"2 Star 12 12\", \"3 Star 12 12 1\", \"4 Star\", \"5 Star\"]} data={[45, 50, 100, 200, 400]} />\n        </div>\n      </Col>\n      <Col span={24} xl={18}>\n        <div className=\"bg-white p-12 bor-rad-8 box-sha-home\">\n          <LineChart />\n        </div>\n      </Col>\n      {/* Doanh thu theo năm */}\n      <Col span={24} xl={12}>\n        <div className=\"bg-white p-12 bor-rad-8 box-sha-home\">\n          {/* <AnnualRevenue /> */}\n          <BarChart/>\n        </div>\n      </Col>\n      {/* Đơn hàng ở tỉnh nào nhiều nhất */}\n      <Col span={24} xl={12}>\n        <div className=\"bg-white p-12 bor-rad-8 box-sha-home h-100\">\n          {/* <TopOrders /> */}\n          <LatestOrder/>\n        </div>\n      </Col>\n    </Row>\n  );\n}\n\nexport default Dashboard;\n"],"names":["ChartJS","CategoryScale","LinearScale","BarElement","ArcElement","ChartDataLabels","Title","Tooltip","Legend","PointElement","LineElement","data","datasets","label","x","y","type","borderColor","backgroundColor","borderWidth","barPercentage","options","responsive","interaction","mode","intersect","plugins","legend","position","display","title","text","font","size","datalabels","anchor","align","formatter","Math","round","weight","tooltip","callbacks","ctx","tooltipItem","scales","color","lineHeight","padding","top","left","right","bottom","min","ticks","stepSize","beginAtZero","offset","grid","BarChart","columns","dataIndex","key","id","name","total","LatestOrder","useState","loading","className","dataSource","pagination","pageSize","gutter","span","xl","EyeOutlined","style","ShoppingCartOutlined","PercentageOutlined","toLocaleString","PieChart","LineChart"],"sourceRoot":""}