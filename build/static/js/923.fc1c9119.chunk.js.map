{"version":3,"file":"static/js/923.fc1c9119.chunk.js","mappings":"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","sources":["components/ResultSearch/index.js","containers/SearchFilterPage/Filter/index.js","containers/SearchFilterPage/ProductCarousel/index.js"],"sourcesContent":["import { Button, Col, InputNumber, Row, Spin } from 'antd';\r\nimport productNotFoundUrl from '../../assets/imgs/no-products-found.png';\r\nimport ProductView from '../../components/ProductView';\r\nimport helpers from '../../helpers';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './index.scss';\r\n\r\n// fn: hàm tính tổng lượt đánh giá sản phẩm\r\nfunction sumRate(rates = []) {\r\n  return rates.reduce((a, b) => a + b, 0);\r\n}\r\n\r\nfunction ResultSearch(props) {\r\n  const { initList } = props;\r\n  const [list, setList] = useState([...initList]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [price, setPrice] = useState({ from: 0, to: 0 });\r\n  const [sortBtnActive, setSortBtnActive] = useState(0);\r\n  const sortButtons = [\r\n    { key: 1, title: 'Price: Hight to Low' },\r\n    { key: 2, title: 'Price: Low to To' },\r\n    { key: 3, title: 'Best sell' },\r\n    { key: 4, title: 'Best rating' },\r\n    { key: 5, title: 'Best deal' },\r\n  ];\r\n\r\n  // event: sắp xếp danh sách theo các tiêu chí, type = 0 -> break\r\n  const onSort = (type = 0) => {\r\n    if (type) {\r\n      if (type === sortBtnActive) {\r\n        // trả về danh sách ban đầu\r\n        setList([...initList]);\r\n        setSortBtnActive(0);\r\n        return;\r\n      } else {\r\n        // loading\r\n        setIsLoading(true);\r\n        setSortBtnActive(type);\r\n        // setPrevSortType(type)\r\n      }\r\n\r\n      let newList = [];\r\n      switch (type) {\r\n        // theo giá giảm dần\r\n        case 1:\r\n          newList = list.sort((a, b) => b.price - a.price);\r\n          break;\r\n        // theo giá tăng dần\r\n        case 2:\r\n          newList = list.sort((a, b) => a.price - b.price);\r\n          break;\r\n        // bán chạy nhất\r\n        case 3:\r\n          newList = list.sort((a, b) => sumRate(b.rate) - sumRate(a.rate));\r\n          break;\r\n        // đánh giá tốt nhất\r\n        case 4:\r\n          newList = list.sort(\r\n            (a, b) => helpers.calStar(b.rate) - helpers.calStar(a.rate),\r\n          );\r\n          break;\r\n        // Khuyến mãi tốt nhất\r\n        case 5:\r\n          newList = list.sort((a, b) => b.discount - a.discount);\r\n          break;\r\n        default:\r\n          setIsLoading(false);\r\n          break;\r\n      }\r\n\r\n      // delay\r\n      setTimeout(() => {\r\n        setIsLoading(false);\r\n        setList(newList);\r\n      }, 200);\r\n    }\r\n  };\r\n\r\n  // event: Lọc theo giá\r\n  const onFilterByPrice = () => {\r\n    setIsLoading(true);\r\n    const { from, to } = price;\r\n    let newList = initList.filter(\r\n      (item) => item.price >= from && item.price <= to,\r\n    );\r\n    // delay\r\n    setTimeout(() => {\r\n      setIsLoading(false);\r\n      setList(newList);\r\n    }, 200);\r\n  };\r\n\r\n  // fn: Hiển thị sản phẩm\r\n  const showProducts = (list) => {\r\n    list = list ? list : [];\r\n    return list.map((product, index) => {\r\n      const { img, title, price, discount, instock, bookid } = product;\r\n      return (\r\n        <Col key={index} span={24} sm={12} lg={8} xl={6}>\r\n          <Link to={`/product/${bookid}`}>\r\n            <ProductView\r\n              name={title}\r\n              price={price}\r\n              stock={instock}\r\n              avtUrl={img}\r\n              discount={discount}\r\n              height={400}\r\n            />\r\n          </Link>\r\n        </Col>\r\n      );\r\n    });\r\n  };\r\n\r\n  // rendering ...\r\n  return (\r\n    <Row className=\"Result-Search bor-rad-8 box-sha-home bg-white m-tb-32\" >\r\n      {/* header sort, search button */}\r\n      <Col span={24} className=\"sort-wrapper p-lr-16\">\r\n        <div className=\"sort p-tb-10 d-flex align-i-center\">\r\n          <h3 className=\"m-r-8 font-weight-700\">Filter</h3>\r\n          {sortButtons.map((item) => (\r\n            <Button\r\n              className={`${item.key === sortBtnActive ? 'sort-btn-active' : ''\r\n                } m-4 bor-rad-4`}\r\n              key={item.key}\r\n              size=\"large\"\r\n              onClick={() => onSort(item.key)}>\r\n              {item.title}\r\n            </Button>\r\n          ))}\r\n          {/* search range price */}\r\n          <div className=\"m-l-8\">\r\n            <InputNumber\r\n              className=\"bor-rad-4\"\r\n              size=\"large\"\r\n              min={0}\r\n              max={1000000000}\r\n              style={{ width: 120 }}\r\n              placeholder=\"min price\"\r\n              step={10000}\r\n              onChange={(value) => setPrice({ ...price, from: value })}\r\n            />\r\n            {` - `}\r\n            <InputNumber\r\n              className=\"bor-rad-4\"\r\n              size=\"large\"\r\n              min={price.from}\r\n              max={1000000000}\r\n              style={{ width: 120 }}\r\n              placeholder=\"max price\"\r\n              step={10000}\r\n              onChange={(value) => setPrice({ ...price, to: value })}\r\n            />\r\n            {price.to > 0 && (\r\n              <Button\r\n                type=\"primary\"\r\n                size=\"large\"\r\n                className=\"m-l-8 price-search-btn bor-rad-4\"\r\n                onClick={onFilterByPrice}>\r\n                Filter\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </Col>\r\n\r\n      {/* render list */}\r\n      <Col span={24} className=\"Result-Search-list p-16\">\r\n        {!list || list.length === 0 ? (\r\n          <div className=\"trans-center d-flex flex-direction-column pos-relative\">\r\n            <img\r\n              className=\"not-found-product m-0-auto\"\r\n              src={productNotFoundUrl}\r\n            />\r\n            <span className=\"font-size-16px m-t-8 t-center\">\r\n              No item could be found\r\n            </span>\r\n          </div>\r\n        ) : isLoading ? (\r\n          <Spin\r\n            className=\"trans-center\"\r\n            tip=\"Loading ...\"\r\n            size=\"large\"\r\n          />\r\n        ) : (\r\n          <Row gutter={[16, 16]}>{showProducts(list)}</Row>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nResultSearch.defaultProps = {\r\n  initList: [],\r\n};\r\n\r\nResultSearch.propTypes = {\r\n  initList: PropTypes.array,\r\n};\r\n\r\nexport default ResultSearch;\r\n","import { Button, Pagination, Row, Spin, Tag } from 'antd';\nimport productApi from '../../../apis/productApi';\nimport ResultSearch from '../../../components/ResultSearch';\nimport constants from '../../../constants/index';\nimport helpers from '../../../helpers';\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport ProductCarousel from '../ProductCarousel';\nimport './index.scss';\nimport { useParams } from 'react-router-dom';\n\n// fn: thêm option vào url\nfunction addOptionToUrl(url, key = '', value = '') {\n  let result = url;\n\n  let isChanged = false,\n    isMatch = false;\n  // tách url để phân tích\n  let queryList = helpers.queryString(url);\n  queryList.forEach((query) => {\n    let k = Object.keys(query)[0];\n    if (k === key) {\n      isMatch = true;\n      const valueList = query[k].split(';');\n      if (valueList.indexOf(value) === -1) {\n        query[k] = query[k] + ';' + value;\n        isChanged = true;\n      }\n    }\n  });\n\n  // nêu chưa tồn tại key, value thì thêm nó vào\n  if (!isMatch) {\n    result += `&${key}=${value}`;\n  }\n\n  // join lại\n  if (isChanged) {\n    result = '?';\n    queryList.forEach((query) => {\n      const k = Object.keys(query)[0];\n      result += `${k}=${query[k]}&`;\n    });\n    result = result.slice(0, result.length - 1);\n  }\n  return result;\n}\n\n// fn: xoá option trong url\nfunction removeOptionToUrl(url, key = '', value = '') {\n  let result = url;\n\n  let isChanged = false;\n  // tách url để phân tích\n  let queryList = helpers.queryString(url);\n\n  queryList.forEach((query) => {\n    let k = Object.keys(query)[0];\n    if (k === key) {\n      query[k] = query[k].replace(\n        new RegExp(`(${value});?|;?(${value})`, 'gi'),\n        '',\n      );\n      isChanged = true;\n    }\n  });\n\n  // join lại\n  if (isChanged) {\n    result = '?';\n    queryList.forEach((query) => {\n      const k = Object.keys(query)[0];\n      result += `${k}=${query[k]}&`;\n    });\n    result = result.slice(0, result.length - 1);\n  }\n  return result;\n}\n\n//fn: phân tích mảng các câu query\nfunction analysisQueryList(queryList = []) {\n  const query = { pOption: new Object(), dOption: new Object() };\n  queryList.forEach((item) => {\n    const key = Object.keys(item)[0];\n    const value = item[key];\n    const { isProductAttr, result } = helpers.analysisQuery(key, value);\n    if (isProductAttr) {\n      Object.assign(query.pOption, result);\n    } else Object.assign(query.dOption, result);\n  });\n  return query;\n}\n\n// fn: main\nfunction FilterResult() {\n  // get query param\n  let s = decodeURI(useLocation().search);\n  // lưu state để thay đổi khi nhấn chọn các options mà không cần redirect\n  const [url, setUrl] = useState(s);\n\n  // phân tích url\n  const search = helpers.replaceMongoKeyword(url);\n  const queryStrList = helpers.queryString(search);\n  let type = 0;\n  const queryList = queryStrList.filter((item) => {\n    //  type\n    if (Object.keys(item)[0] === 't') {\n      if (isNaN(parseInt(item.t))) type = 0;\n      else type = parseInt(item.t);\n      return false;\n    }\n    return true;\n  });\n  const { dOption, pOption } = analysisQueryList(queryList);\n  // state pagination\n  const [list, setList] = useState([]);\n  const [page, setPage] = useState(1);\n  const [total, setTotal] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const perPage = 16;\n\n  // fn: filter function\n  async function getFilterProducts(currentPage, isSubscribe) {\n    try {\n      setIsLoading(true);\n      const productList = await productApi.getFilterProducts(\n        page,\n        perPage,\n        type\n      );\n      // console.log(productList.data);\n      if (productList && isSubscribe) {\n        //isSubscribe dùng để stop render khi component unmounted\n        const { count, rows } = productList.data;\n        setTotal(count);\n        setList(rows);\n        setIsLoading(false);\n      }\n    } catch (error) {\n      setTotal(0);\n      setIsLoading(false);\n      setList([]);\n    }\n  }\n\n  // event: Lấy dữ liệu tìm kiếm\n  useEffect(() => {\n    let isSubscribe = true;\n    setIsLoading(true);\n    if (page !== 1) setPage(1);\n    getFilterProducts(1, isSubscribe);\n\n    // clean up\n    return () => {\n      isSubscribe = false;\n    };\n  }, [url]);\n\n  // event: Lấy dữ liệu tìm kiếm khi đổi trang\n  useEffect(() => {\n    let isSubscribe = true;\n    getFilterProducts(page, isSubscribe);\n    // clean up\n    return () => {\n      isSubscribe = false;\n    };\n  }, [page]);\n\n  //  Note: FILTER OPTION\n  const [tagList, setTagList] = useState([]);\n  const [activeList, setActiveList] = useState([]);\n\n  // event: Chọn 1 btn trong bộ lọc\n  const onChecked = (sub, query, key) => {\n    const { title, to } = sub;\n    const index = activeList.findIndex((value) => value === key);\n    if (index === -1) {\n      // thêm 1 key mới\n      setActiveList([...activeList, key]);\n      // thêm tag mới\n      setTagList([\n        ...tagList,\n        { key, query, to, title, color: helpers.randomColor() },\n      ]);\n      // thay đổi url\n      setUrl(addOptionToUrl(url, query.slice(0, query.length - 1), to));\n    }\n    // xoá key hiện tại đã chọn\n    else {\n      const newActiveList = [\n        ...activeList.slice(0, index),\n        ...activeList.slice(index + 1, activeList.length),\n      ];\n      setActiveList([...newActiveList]);\n      setTagList([\n        ...tagList.slice(0, index),\n        ...tagList.slice(index + 1, tagList.length),\n      ]);\n      if (newActiveList.length === 0) setUrl(s);\n      else setUrl(removeOptionToUrl(url, query.slice(0, query.length - 1), to));\n    }\n  };\n\n  // event: đóng 1 tag\n  const onCloseTag = (key, query, to) => {\n    const index = tagList.findIndex((item) => item.key === key);\n    const newTagList = [\n      ...tagList.slice(0, index),\n      ...tagList.slice(index + 1, tagList.length),\n    ];\n    setTagList([...newTagList]);\n    setActiveList([\n      ...activeList.slice(0, index),\n      ...activeList.slice(index + 1, activeList.length),\n    ]);\n    if (newTagList.length === 0) setUrl(s);\n    else setUrl(removeOptionToUrl(url, query, to));\n  };\n\n  // event: đóng tất cả các tag\n  const onCloseAll = () => {\n    setActiveList([]);\n    setTagList([]);\n    setUrl(s);\n  };\n\n  // fn: hiển thị bộ lọc\n  function renderFilterOption(type) {\n    if (type < 0) return;\n    const list = constants.FILTER_OPTION_LIST.find((item) => item.key === type)\n      .data;\n    return (\n      list &&\n      list.map((item, index) => (\n        <div key={index} className=\"Filter-Options-item m-tb-14\">\n          <h3 className=\"Filter-Options-item--title\">{item.title}</h3>\n          <div>\n            {item.subFilters.map((sub, i) => {\n              let key = index.toString() + i.toString();\n              return (\n                <Button\n                  key={key}\n                  className={`bor-rad-4 m-r-8 ${activeList.findIndex((value) => value === key) === -1\n                      ? ''\n                      : 'filter-active-btn'\n                    }`}\n                  onClick={() => onChecked(sub, item.query, key)}>\n                  {sub.title}\n                </Button>\n              );\n            })}\n          </div>\n        </div>\n      ))\n    );\n  }\n\n  // fn: hiển thị tag đang chọn lọc\n  function showTagList() {\n    return (\n      tagList &&\n      tagList.map((item, index) => (\n        <Tag\n          className=\"bor-rad-4\"\n          key={index}\n          closable={true}\n          color={item.color}\n          onClose={() => onCloseTag(item.key, item.query, item.to)}>\n          {item.title}\n        </Tag>\n      ))\n    );\n  }\n\n  // rendering...\n  return (\n    <div className=\"container\" style={{ minHeight: '100vh' }}>\n      {/* Carousel */}\n      <ProductCarousel />\n\n      {/* Số  kết quả tìm kiếm */}\n      {/* {!isLoading && (\n        <h2 className=\"font-size-24px m-b-12\">\n          Tìm được <b>{total}</b> sản phẩm\n        </h2>\n      )} */}\n\n      {/* loading */}\n      {isLoading ? (\n        <Spin\n          className=\"trans-center\"\n          tip=\"Finding ...\"\n          size=\"large\"\n        />\n      ) : (\n        <>\n          {/* Bộ lọc  */}\n          {/* <div className=\"Filter-Options p-tb-16 bg-white bor-rad-8 box-sha-home\">\n            <div className=\"list-active p-lr-16 p-b-8 d-flex justify-content-between\">\n              <b className=\"font-size-22px filter-list m-r-20\">Bộ lọc</b>\n              {tagList.length > 0 && (\n                <>\n                  <div className=\"d-flex align-i-center flex-wrap\">\n                    {showTagList()}\n                  </div>\n                  <Button\n                    className=\"bor-rad-4\"\n                    type=\"dashed\"\n                    danger\n                    onClick={onCloseAll}>\n                    <b>Xoá tất cả</b>\n                  </Button>\n                </>\n              )}\n            </div>\n            <div className=\"p-lr-16 p-t-16\">{renderFilterOption(type)}</div>\n          </div> */}\n            {/* Kết quả lọc, tìm kiếm */}\n            <ResultSearch initList={list} />\n          {/* pagination */}\n          {total > 0 && (\n            <Pagination\n              className=\"m-tb-16 t-center\"\n              total={total}\n              current={page}\n              showSizeChanger={false}\n              pageSize={perPage}\n              onChange={(p) => setPage(p)}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default FilterResult;\n","import { Carousel } from 'antd';\nimport React from 'react';\nimport './index.scss';\n\n// Do cả chương trình chỉ có 1 list carousel\n// Nên lưu thẳng vào đây để đỡ tốn chi phí query\nconst list = [\n  'https://res.cloudinary.com/dsa-company/image/upload/v1649910743/Banner/360_F_316376413_nYL2jpLONPQPOsy31DE86n7FPpSxPIi3_w593rx.jpg',\n  'https://res.cloudinary.com/dsa-company/image/upload/v1649910474/Banner/22366036_swcwjo.jpg',\n  'https://res.cloudinary.com/tuan-cloudinary/image/upload/v1609752560/saleOff/carousels/unnamed_1_t5luv4.webp',\n];\n\nfunction ProductCarousel() {\n  return (\n    <Carousel className=\"Product-Carousel m-tb-24 bor-rad-8\" autoplay>\n      {list.map((item, index) => (\n        <img\n          className=\"Product-Carousel-img bor-rad-8\"\n          src={item}\n          key={index}\n        />\n      ))}\n    </Carousel>\n  );\n}\n\nexport default ProductCarousel;\n"],"names":["sumRate","rates","reduce","a","b","ResultSearch","props","initList","useState","list","setList","isLoading","setIsLoading","from","to","price","setPrice","sortBtnActive","setSortBtnActive","className","span","key","title","map","item","size","onClick","type","newList","sort","rate","helpers","discount","setTimeout","onSort","min","max","style","width","placeholder","step","onChange","value","filter","length","tip","gutter","product","index","img","instock","bookid","sm","lg","xl","ProductView","name","stock","avtUrl","height","showProducts","src","productNotFoundUrl","defaultProps","s","decodeURI","useLocation","search","url","queryStrList","queryList","query","pOption","Object","dOption","forEach","keys","isProductAttr","result","assign","analysisQueryList","isNaN","parseInt","t","page","setPage","total","setTotal","getFilterProducts","currentPage","isSubscribe","productApi","productList","data","count","rows","useEffect","minHeight","ProductCarousel","current","showSizeChanger","pageSize","p","autoplay"],"sourceRoot":""}